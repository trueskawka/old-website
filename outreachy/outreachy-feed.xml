<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xml" href="/feed.xslt.xml"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
  <generator uri="http://jekyllrb.com" version="3.2.1">Jekyll</generator>
  
  <link href="https://trueskawka.github.io/outreachy/outreachy-feed.xml" rel="self" type="application/atom+xml" />
  <link href="https://trueskawka.github.io/" rel="alternate" type="text/html" hreflang="en" />
  
  <updated>2017-01-03T03:49:22+01:00</updated>
  
    <id>https://trueskawka.github.io/</id>
  

  
    <title type="html">Alicja Raszkowska</title>
  

  

  

  
    
      
        
          
        
      
        
          
            <entry>
              <title type="html">To mentor</title>

              
                <link href="https://trueskawka.github.io/zulip/outreachy/gci/blog/2017/01/03/to-mentor.html" rel="alternate" type="text/html" title="To mentor" />
                <published>2017-01-03T03:27:00+01:00</published>
                <updated>2017-01-03T03:27:00+01:00</updated>
                <id>https://trueskawka.github.io/zulip/outreachy/gci/blog/2017/01/03/to-mentor</id>
                <content type="html" xml:base="https://trueskawka.github.io/zulip/outreachy/gci/blog/2017/01/03/to-mentor.html">&lt;p&gt;When I first heard Zulip is taking part in Google Code-In and was asked to
become a mentor, I got excited. And scared. The more time passed, the more
scared I was, feeling inadequate and not experienced enough to review other
people’s code.&lt;/p&gt;

&lt;p&gt;After the first week of GCI I was terrified. It felt like the reviews were
a never-ending battle between the quality and quantity (GCI students are motivated to do as many tasks as possible due to the contest rules). I’ve
constantly been asked questions I didn’t know the answers to and was
expected to understand features from a large chunk of the codebase - larger
than I felt comfortable with.&lt;/p&gt;

&lt;p&gt;I felt like I was only disturbing the learning process and irritating the
students with my constant questions and nagging for improvements. I was
learning a lot to my own benefit:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;After explaining git flow many times, I finally feel confident while working in the terminal and not just pretending to be comfortable with it.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;I’ve learned to rebase, amend and merge other’s work into the
  codebase.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;I’ve created a group of tasks on interactive bots and learned more
  from students asking questions about them than from creating my own bot.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;I’ve had a comprehensible conversation in German with one of the
  students, which is a big deal for me since I haven’t used the language
  in years.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Gradually, I became more and more confident with code reviews and helping
out on chat. I’ve read a bunch of articles on multiple topics concerning
Python, APIs, webhooks, frontend testing and typing. I’ve learned a ton
from reading other mentors’ reviews of the contributions. I’m now able to
calmly read a question and not panic when I initially don’t know the
answer, even though I’m &lt;em&gt;supposed to&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Being in this double role of a mentee and a mentor, I think I benefited
much more from GCI than I thought possible. Also, Zulip is rapidly being
improved by many motivated students - hundreds of mypy annotations were
added, multiple features were fixed, many interactive bot were introduced, and a ton of user documentation was written. I did not expect for it to go
this well.&lt;/p&gt;

&lt;p&gt;Over the past few weeks I’ve also had a lot of thoughts on improving the
process and communication, even going as far as to have &lt;a href=&quot;https://github.com/zulip/zulip-gci/pull/394&quot;&gt;pull request&lt;/a&gt; for that.&lt;/p&gt;

&lt;h3 id=&quot;whats-important-to-the-mentor&quot;&gt;What’s important to the mentor&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Give context.&lt;/p&gt;

    &lt;p&gt;When asking for help or a review, give the mentor some context on the
  issue. They are working on multiple issues and helping many people -
  they might not immediately remember all the relevant facts. Show what
  you have already done to solve the problem.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Think about the user.&lt;/p&gt;

    &lt;p&gt;When developing a feature, think about the user perspective whenever
  applicable. What are the expected use cases? What would be comfortable
  to use, not just simple and reasonable to implement?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Respect other’s time.&lt;/p&gt;

    &lt;p&gt;Before submitting anything, make sure you took care of any sloppiness
  (typos, linter errors, unnecessary chunks of code). Test your feature
  manually. Make sure you are asking for help you weren’t able to solve,
  not something you forgot to check&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Don’t expect simple answers.&lt;/p&gt;

    &lt;p&gt;When asking questions, expect help, but be prepared to accept it in
  the form it’s been offered. If a mentor is pointing you to an external
  resource or asking you to double check your implementation, they’re
  doing it to help you learn.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Don’t be embarrassed.&lt;/p&gt;

    &lt;p&gt;Sometimes you might think asking a question will make you look&lt;br /&gt;
  inadequate. Don’t let this keep you stuck. If you’ve tried and failed,
  there is nothing to be ashamed of.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Strive for self-guidance.&lt;/p&gt;

    &lt;p&gt;Have ownership of your work - both the solutions and the problems. Be
  proud of your achievements, however small. You are learning here and the best way to learn is to take responsibility.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Stay positive.&lt;/p&gt;

    &lt;p&gt;I’m sure you can do it - so you should be to. Don’t discourage yourself
  and lessen your skills. You are here to learn and I’m here to help you,
  there is nothing wrong with making mistakes on the way. Just be sure to
  understand and learn from them.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content>
              


              
              
              
              
              

              
                <author>
                    <name>alicja</name>
                  
                  
                </author>
              

              

              

              
                <summary type="html">When I first heard Zulip is taking part in Google Code-In and was asked to become a mentor, I got excited. And scared. The more time passed, the more scared I was, feeling inadequate and not experienced enough to review other people’s code.</summary>
              

              
              
            </entry>
          
        
      
        
          
        
      
        
          
        
      
    
  
    
      
        
          
        
      
        
          
            <entry>
              <title type="html">To be mentored</title>

              
                <link href="https://trueskawka.github.io/zulip/outreachy/blog/2017/01/02/to-be-mentored.html" rel="alternate" type="text/html" title="To be mentored" />
                <published>2017-01-02T23:25:00+01:00</published>
                <updated>2017-01-02T23:25:00+01:00</updated>
                <id>https://trueskawka.github.io/zulip/outreachy/blog/2017/01/02/to-be-mentored</id>
                <content type="html" xml:base="https://trueskawka.github.io/zulip/outreachy/blog/2017/01/02/to-be-mentored.html">&lt;p&gt;One of my fellow Recursers is actively researching needs of newbie
developers and interviewing juniors, mentors and anyone else engaged in hiring programmers who are starting out. Given my experience so far, I more than qualified for an interview as a tech industry newbie.&lt;/p&gt;

&lt;p&gt;At first I thought I wouldn’t have any relevant insights, since my
experience is very fresh and I haven’t encountered any of the serious problems many face in tech. I started talking and only realized about 45 minutes later that our chat is nearly over.&lt;/p&gt;

&lt;h3 id=&quot;first-developer-job---no-mentoring&quot;&gt;First developer job - no mentoring&lt;/h3&gt;

&lt;p&gt;The team I worked with in my first development job was not experienced in software development. They were, just like me, mostly economists who learned to program, without any previous experience in building applications. Even though they’ve done thorough research and managed to build a pretty good product, I was constantly struggling.&lt;/p&gt;

&lt;p&gt;I didn’t have an experienced developer as a mentor, so I felt I was
learning only through making mistakes. It’s not wrong to make mistakes and fix them, but it can’t be the only learning strategy for effective development. The job was more about quick fixes and tiny new features than important contributions that enhanced the core product. I was barely taken into account when building important features, usually as a person who’d
work on implementation rather than an equal contributor.&lt;/p&gt;

&lt;p&gt;I didn’t have the words to name most of my concerns. I felt that no one cared about my growth as a developer and an employee, even if that could be beneficial for the company in the long term. Most of the time I wasn’t sure I was doing things right and had serious doubts if I was even working on the right things.&lt;/p&gt;

&lt;p&gt;I felt that I was the only person who had these problems. How
could I pinpoint such vague ideas like “you are interrupting my learning process” and “I don’t think this solution is something we want to do, since
it’s not best practice”, especially when I didn’t know how the process
should look like or what are the best practices?&lt;/p&gt;

&lt;h3 id=&quot;recognizing-bad-mentoring&quot;&gt;Recognizing bad mentoring&lt;/h3&gt;

&lt;p&gt;I was very lucky to spend three months at the Recurse Center, where I was
encouraged to ask questions and voice my concerns. The concerns were taken
seriously, even if I felt I’m being overly sensitive. That helped me
recognize bad mentoring, among other behaviors I couldn’t previously name.&lt;/p&gt;

&lt;p&gt;I’m not saying any of my mentors intended not to help me or were driven by the wrong things. Bad mentoring is not about intent, but the way of approaching a problem. Mentoring should be about helping the mentee with
their problem at hand, in a way that helps them grow and encourages them to try and learn. It’s a skill to be learned.&lt;/p&gt;

&lt;p&gt;Bad mentors ask questions they already know the answers to and get impatient when they don’t receive the right answer quickly. They sometimes answer their own questions to speed up the process and correct the details before making sure the mentee even understands the problem. They say something is “obvious” or “easy”, which further discourages the mentee from trying.&lt;/p&gt;

&lt;p&gt;Bad mentors answer the problem they see, not the one the mentee asked to be
helped with. They focus on their comfort and the &lt;em&gt;right&lt;/em&gt; approach instead
of focusing on the mentee’s learning process. They sometimes don’t even try
to help with the actual problem, but rephrase the issue to answer
something that’s more interesting or easier for them to explain.&lt;/p&gt;

&lt;p&gt;Bad mentors don’t give the mentee time to find answers on their own and
explore. They don’t want to explore with the mentee. They throw resources at the mentee and don’t set up a feedback loop that would encourage them
to communicate.&lt;/p&gt;

&lt;p&gt;I think bad mentors in tech are often experienced and skilled developers
who forgot how hard it was to get to where they are and didn’t think to ask.&lt;/p&gt;

&lt;h3 id=&quot;building-a-relationship-with-a-mentor&quot;&gt;Building a relationship with a mentor&lt;/h3&gt;

&lt;p&gt;One of my best friends at the Recurse Center was also my first great mentor.
Over the course of our batch we developed a relationship based on trust and
mutual respect, motivating each other to grow. I still think I got more
out of this dynamic, even though I’ve been a mentor myself for the past
few weeks and I know how much I’ve learned from that.&lt;/p&gt;

&lt;p&gt;My first great mentor expected me to not give up on my problems and approach
them with a curious mind, instead of stressing out and feeling inadequate.
He expected me to first try and answer my own questions, even if I was
worried I’d get them completely wrong. He’d discuss features with me and make sure I understand what’s happening, addressing relevant parts of my
input.&lt;/p&gt;

&lt;p&gt;Whenever I got lost, I could just ask him, even if it felt like the stupidest question ever. The fear of embarrassing myself gradually went
away thanks to all the confidence he had in me. After a few weeks, it felt more like a partnership of equals than mentoring, even though there was a
vast difference in our knowledge and experience.&lt;/p&gt;

&lt;h3 id=&quot;working-with-open-source-mentors&quot;&gt;Working with open-source mentors&lt;/h3&gt;

&lt;p&gt;When I started working with Zulip I didn’t know any of my soon to be
mentors. They could only learn about me from chat and my contributions,
without having the opportunity to get to know me in person, which could
help me be more confident. I’ve been entering this community of awesome
developers and all of them knew much more than I did - how could I possibly
bring value?&lt;/p&gt;

&lt;p&gt;I was lucky again since Zulip maintainers and contributors are not only
welcoming to newbie developers, but also have experience with introducing
them to the project. Zulip has great &lt;a href=&quot;https://zulip.readthedocs.io/en/latest/&quot;&gt;documentation&lt;/a&gt; and the team is
very responsive on chat.&lt;/p&gt;

&lt;p&gt;When working on a feature, mentors would set up a context for my work,
providing any relevant information and making sure I understand the
problem well. They’d answer my questions and encourage me to share
work-in-progress code to drive the conversation.&lt;/p&gt;

&lt;p&gt;From day one I was treated like a contributor, a partner, not a problem. I
was taken seriously and expected to be a responsible community member. My
input was valued and taken into account, my questions answered. I was also
constantly encouraged with gradual code reviews that improved my skills and
workflow tremendously over the span of a month (and are still improving).&lt;/p&gt;

&lt;h3 id=&quot;dealing-with-the-real-world&quot;&gt;Dealing with the &lt;em&gt;real world&lt;/em&gt;&lt;/h3&gt;

&lt;p&gt;A newbie developer and a woman, I’m sure to face some communication issues
in my future endeavors. I will have to prove my abilities and substantiate
my reasoning. That’s why I also seek out more direct and less welcoming mentors, who will compare my solutions to optimal ones and not make it
any easier for me to solve problems.&lt;/p&gt;

&lt;p&gt;It’s not easy to deal with direct questions about my implementation and
go into the nitty-gritty of my code without the comfort of additional research and asynchronous communication. I do however need to know my stuff
cold if I want to become a better developer, so I welcome mentors who are
harder to deal with.&lt;/p&gt;

&lt;h3 id=&quot;whats-important-to-the-mentee&quot;&gt;What’s important to the mentee&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Believing in them.&lt;/p&gt;

    &lt;p&gt;It’s not only about supporting the mentee, but also challenging them and giving them real responsibilities from the very start. Building a relationship based on trust requires accountability and a good way to motivate oneself to deliver is knowing someone needs our input.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Being excited about their growth.&lt;/p&gt;

    &lt;p&gt;Every review at Zulip begins and ends with a positive note. Start with
  a thank you when the mentee is asking for a review - they are learning
  and a great way to learn is to build and improve.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Setting up a learning environment.&lt;/p&gt;

    &lt;p&gt;Give the mentee context for their work - point them to other
  contributions and relevant docs. Treat code reviews as learning
  opportunities and give incremental steps to improve the mentees work,
  starting from the core functionality and expecting more and more
  self-guidance and quality.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Encouraging them to leave their comfort zone.&lt;/p&gt;

    &lt;p&gt;Ask the mentee to read others’ code, support them in mentoring less
  experienced contributors. Push them to share their code early with
  work-in-progress pull requests - I for one had to talk myself out of
  being this perfect person.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Introducing different kinds of mentors.&lt;/p&gt;

    &lt;p&gt;Encourage the mentee to ask multiple mentors for advice and help. Let
  them learn how to communicate with other team members and benefit
  from their guidance.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Balancing the amount of information.&lt;/p&gt;

    &lt;p&gt;Don’t give the mentee answers right away, but don’t leave them hanging
  for too long. Start with not giving enough and gradually find a balance
  with providing more details while expecting more self-guidance. Stop
  before you answer your own questions.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content>
              


              
              
              
              
              

              
                <author>
                    <name>alicja</name>
                  
                  
                </author>
              

              

              

              
                <summary type="html">One of my fellow Recursers is actively researching needs of newbie developers and interviewing juniors, mentors and anyone else engaged in hiring programmers who are starting out. Given my experience so far, I more than qualified for an interview as a tech industry newbie.</summary>
              

              
              
            </entry>
          
        
      
        
          
        
      
    
  
    
      
        
          
        
      
        
          
        
      
    
  
    
      
        
          
        
      
    
  
    
      
        
          
            <entry>
              <title type="html">Getting into Outreachy</title>

              
                <link href="https://trueskawka.github.io/outreachy/blog/2016/12/07/getting-into-outreachy.html" rel="alternate" type="text/html" title="Getting into Outreachy" />
                <published>2016-12-07T16:45:00+01:00</published>
                <updated>2016-12-07T16:45:00+01:00</updated>
                <id>https://trueskawka.github.io/outreachy/blog/2016/12/07/getting-into-outreachy</id>
                <content type="html" xml:base="https://trueskawka.github.io/outreachy/blog/2016/12/07/getting-into-outreachy.html">&lt;p&gt;Getting into Outreachy is a long process that requires a lot of effort. In order to have a chance at an internship one has to:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Look through all the participating organizations.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Read up about the projects and find relevant bite-sized contributions.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Make a small contributions and communicate with mentors.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Write an application and submit it before the deadline.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Keep contributing and communicating.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can find more details about the process on the &lt;a href=&quot;https://wiki.gnome.org/Outreachy&quot;&gt;GNOME wiki&lt;/a&gt; - I’m not going to dive into that. I’d like to reflect on what helped me, as it might be useful for next round’s applicants and tech newbies in general.&lt;/p&gt;

&lt;h3 id=&quot;fight-the-impostor-syndrome&quot;&gt;Fight the impostor syndrome.&lt;/h3&gt;

&lt;p&gt;First time I’ve heard about Outreachy, I wasn’t sure it was for me. The application process alone was enough to make me doubt my skills.&lt;/p&gt;

&lt;p&gt;A little bit of background here - I’ve had my fair share of programming experience over the past 10 years, but I’ve never worked as a &lt;em&gt;real&lt;/em&gt; developer (apart from this one time at a startup, when it didn’t feel real enough). I come from a quant-economical background and I’ve been mostly working analytical and consulting jobs over the course of my career. Around February this year I’ve decided to take a sabbatical and become the developer I’ve always wanted to be.&lt;/p&gt;

&lt;p&gt;During my Outreachy application process I’ve been staying in New York, taking part in the most wonderful programming experience as a participant at the &lt;a href=&quot;https://www.recurse.com/&quot;&gt;Recurse Center&lt;/a&gt;. I was immersed in a friendly environment, full of brilliant people who wouldn’t take &lt;em&gt;I’m not good enough&lt;/em&gt; for an answer.&lt;/p&gt;

&lt;p&gt;The Recurse Center founders tell us we’re a part of the community and they want us there on the very first day of the batch. That alone made me feel more of a programmer. They also tell us about the importance of self-motivation and the risk many smart people face - the &lt;a href=&quot;https://www.wikiwand.com/en/Impostor_syndrome&quot;&gt;impostor syndrome&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you are thinking about applying, you are good enough. Challenge yourself and fight your impostor syndrome. We’ve all had to begin somewhere.&lt;/p&gt;

&lt;h3 id=&quot;find-your-motivation&quot;&gt;Find your motivation.&lt;/h3&gt;

&lt;p&gt;Why did I want to get into Outreachy in the first place?&lt;/p&gt;

&lt;p&gt;What helped me a lot was talking to many people about the idea of applying. I was shy about it, so at first I asked only the people I felt very comfortable with - my closest friends and RC facilitators. While answering their questions, I’ve stated my doubts (and there were a lot of them!) and pointed out the possible benefits of Outreachy, to get myself more and more excited about the idea of applying:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;I was too stressed out to apply for &lt;em&gt;real&lt;/em&gt; developer jobs.&lt;/p&gt;

    &lt;p&gt;I’ve decided only recently to switch careers and become a full-time developer. I felt that Outreachy would be the next logical step for me, as it seemed like a safe yet challenging environment for a newbie developer.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;I wanted a remote opportunity, as I was not sure if I’d like to move abroad for a developer job.&lt;/p&gt;

    &lt;p&gt;This meant I was looking for something that’d allow me to work from Warsaw and gain enough experience to decide what should my next step be. Also, getting a job as a remote developer requires remote experience, so it would benefit my future career.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;I’ve always wanted to contribute to open-source projects, but I was too scared to start.&lt;/p&gt;

    &lt;p&gt;It seemed that with my mixed experience and only so much time on my hands while working analytical and consulting jobs, I’m not a good fit. Outreachy would be an opportunity to challenge those assumptions.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;I felt my half-year sabbatical wasn’t enough.&lt;/p&gt;

    &lt;p&gt;I’ve started many projects and had so much to learn, it felt like it’s never going to end - which is exciting, but may also be demotivating. A few more months spent in a lightweight environment felt like something I needed.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Gradually, I became confident enough to tell everyone I’m applying. At some point I became confident enough to convince myself this is in my reach. To explain what I’ll be doing as an intern even to people I didn’t know.&lt;/p&gt;

&lt;p&gt;Understand why you think applying for Outreachy is what you want to do - it’s a long, self-motivated endeavor that will require a lot from you. In order for this to work, you need to be sure you have motivation behind it. There are many other opportunities if you decide it’s not for you.&lt;/p&gt;

&lt;p&gt;If you’re not sure what motivates you or need some help with that impostor syndrome, ask people who care about you. Find a community. Ask stupid questions. When, if not now?&lt;/p&gt;

&lt;h3 id=&quot;make-sure-its-meaningful&quot;&gt;Make sure it’s meaningful.&lt;/h3&gt;

&lt;p&gt;As I was interested in working with many organizations, I’ve had to make some tough choices and choose a project. Some names sparked my immediate interest, but many of them felt out of my reach (I still feel that contributing to Linux kernel or FFmpeg requires a lot more than I could muster).&lt;/p&gt;

&lt;p&gt;I came up with a set of criteria that worked for me:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;I need to be familiar with the product and use it often enough to be comfortable as a user.&lt;/p&gt;

    &lt;p&gt;This meant anything that had to do with Linux couldn’t be my first choice, as I’m unfamiliar with the environment and the problems product users are facing.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;I need to find the project meaningful, fulfilling specific needs and supporting a community.&lt;/p&gt;

    &lt;p&gt;This meant I had to find a community I care about that is using the product and would benefit from a new contributor engaging in the project.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;I need to feel welcome when contributing to the project.&lt;/p&gt;

    &lt;p&gt;This meant I had to be comfortable with making mistakes and learning from the community, asking questions rather than being embarrassed. Other developers had to understand that as a newbie in open-source I need a lot of learning and patience.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;I need to believe I can actually impact the project significantly and make a meaningful contribution.&lt;/p&gt;

    &lt;p&gt;I didn’t want to get engaged in something I’d only be able to do mundane and seemingly unimportant tasks for - although the &lt;em&gt;mundane&lt;/em&gt; and &lt;em&gt;seemingly unimportant&lt;/em&gt; are often tasks that have been neglected for a while and need a contributor. This meant I had to be comfortable with the codebase and understand what is a meaningful contribution.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There was only one organization that was a clear &lt;em&gt;yes&lt;/em&gt; for all of my criteria - Zulip. I’ve been using the product constantly since day one at the Recurse Center, which also meant I’ve had a community I cared about. I’ve felt immediately welcome in the project and believed I know the users’ needs well enough to understand what’s meaningful for them.&lt;/p&gt;

&lt;p&gt;Define your own criteria that’ll help you through this process. It’s hard, as there are a lot of interesting choices and you’ll be tempted to try everything. I’m not saying it’s impossible, but I’ve heard from many people more experienced than me that one can’t really have more than 2-3 priority organizations in this process.&lt;/p&gt;

&lt;p&gt;I went all in for Zulip and didn’t look back - I haven’t applied for any other organizations, because it seemed to me with the time I had I couldn’t possibly make a meaningful contribution to any other project. This strategy might be ill-advised for many, just like with getting into college - sometimes having a second choice that is good enough makes one feel a little bit more confident and that confidence can make a difference.&lt;/p&gt;

&lt;p&gt;Whatever you decide to do, make sure any projects you choose spark joy and will allow you to be motivated for the whole 3 months.&lt;/p&gt;

&lt;h3 id=&quot;learn-code-repeat&quot;&gt;Learn. Code. Repeat.&lt;/h3&gt;

&lt;p&gt;The past two months have been a learning fast-track. I’ve made many mistakes, some embarrassing enough that I still need some time to be able to talk about them publicly. What kept me going were the encouragement from the community - as I contributed and got more comfortable, Zulip was becoming more and more &lt;strong&gt;my&lt;/strong&gt; community - and seeing my contributions implemented in the project. Slowly a more refined idea of project needs emerged and I started thinking about myself as a contributor, as opposed to the newbie everyone had to help.&lt;/p&gt;

&lt;p&gt;I don’t have any easy answers here, as this process is different for everyone. In order to become a contributor, you need to understand the current state of the project and what is the expected state - in a week, a few months and a few years. This is something you learn gradually, through asking questions and coding, engaging in the community and being proactive.&lt;/p&gt;

&lt;p&gt;If it feels like home, it probably is.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;One can never be too grateful. I’d like to thank:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Cihan Demirci&lt;/strong&gt; for all the the all-nighters, patience and our growing friendship&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Sumana Harihareswara&lt;/strong&gt; for her guidance, inspiration and help&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Tim Abbott&lt;/strong&gt; and &lt;strong&gt;Steve Howell&lt;/strong&gt; for their patience and introducing the newbie developer to open-source&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Neeraj Wahi&lt;/strong&gt; for his positive attitude and Zulip React Native workshop&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Michael Cordover&lt;/strong&gt; for helping me out with my first contribution&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Andy Lee&lt;/strong&gt;, &lt;strong&gt;Andrew Yoon&lt;/strong&gt; and &lt;strong&gt;Andrea Orru&lt;/strong&gt; for being the best RC check-out group&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;James Porter&lt;/strong&gt; for our weekly one-on-ones and guidance&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Leah Hanson&lt;/strong&gt; for helping me out with refactoring my Outreachy application&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Satabdi Das&lt;/strong&gt; for our conversations on Outreachy and encouragement&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Alicia Thilani Singham Goodwin&lt;/strong&gt; and &lt;strong&gt;Jennifer Gooley&lt;/strong&gt; for telling me about this opportunity&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Nancy Thomas&lt;/strong&gt; for support and advice&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Rachel Vincent&lt;/strong&gt;, &lt;strong&gt;Michelle Steigerwalt&lt;/strong&gt; and &lt;strong&gt;Lyn Normoyle&lt;/strong&gt; for flooding my feed with positivity, inspiration and cats&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Nick Bergson-Shilcock&lt;/strong&gt;, &lt;strong&gt;David Albert&lt;/strong&gt; and &lt;strong&gt;Sonali Sridhar&lt;/strong&gt; for saying the right words at the right time&lt;/li&gt;
  &lt;li&gt;the &lt;strong&gt;Recurse Center community&lt;/strong&gt; as a whole for making me a part of something magical&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I’m excited about &lt;a href=&quot;https://wiki.gnome.org/Outreachy/2016/DecemberMarch&quot;&gt;Outreachy round 13&lt;/a&gt;!&lt;/p&gt;</content>
              


              
              
              
              
              

              
                <author>
                    <name>alicja</name>
                  
                  
                </author>
              

              

              

              
                <summary type="html">Getting into Outreachy is a long process that requires a lot of effort. In order to have a chance at an internship one has to:</summary>
              

              
              
            </entry>
          
        
      
        
          
        
      
    
  
    
      
        
          
        
      
    
  
    
      
        
          
        
      
        
          
        
      
    
  
    
      
        
          
        
      
        
          
        
      
    
  
    
      
        
          
        
      
        
          
        
      
        
          
        
      
    
  
    
      
        
          
        
      
        
          
        
      
        
          
        
      
    
  
</feed>
