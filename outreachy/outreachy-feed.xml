<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xml" href="/feed.xslt.xml"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
  <generator uri="http://jekyllrb.com" version="3.2.1">Jekyll</generator>
  
  <link href="https://trueskawka.github.io/outreachy/outreachy-feed.xml" rel="self" type="application/atom+xml" />
  <link href="https://trueskawka.github.io/" rel="alternate" type="text/html" hreflang="en" />
  
  <updated>2017-01-25T17:26:12+01:00</updated>
  
    <id>https://trueskawka.github.io/</id>
  

  
    <title type="html">Alicja Raszkowska</title>
  

  

  

  
    
      
        
          
        
      
        
          
        
      
    
  
    
      
        
          
        
      
        
          
            <entry>
              <title type="html">How I grow</title>

              
                <link href="https://trueskawka.github.io/zulip/outreachy/gci/blog/2017/01/12/how-i-grow.html" rel="alternate" type="text/html" title="How I grow" />
                <published>2017-01-12T02:46:00+01:00</published>
                <updated>2017-01-12T02:46:00+01:00</updated>
                <id>https://trueskawka.github.io/zulip/outreachy/gci/blog/2017/01/12/how-i-grow</id>
                <content type="html" xml:base="https://trueskawka.github.io/zulip/outreachy/gci/blog/2017/01/12/how-i-grow.html">&lt;p&gt;The past few months have been an ongoing adventure for me - an adventure in
learning to manage the &lt;em&gt;disorienting level of freedom&lt;/em&gt; I’ve had to face.&lt;/p&gt;

&lt;p&gt;This might sound ridiculous - after all, many dream of having enough time
for learning and growing. For focusing on whatever they want, not on what
they are told to. Especially for programmers, it seems like a dream come
true - a few months of working for the pure pleasure of it and contributing
to open-source projects? Count me in!&lt;/p&gt;

&lt;p&gt;It’s been great. I have never been this happy. To wake up every day and feel
this is what I want to do, to think of code and in code with excitement.
I sometimes still feel not good or smart or experienced enough, but I never
feel it was the wrong choice.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Yes, and…&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;…and it’s very hard to stay on track. After all, programming
is full of opportunities - every day there are new libraries, patches,
languages and amazing projects created by someone on the Internet. It may
seem that there is never enough time to learn and the endless possibilities
can become suffocating. It’s extremely hard to stay creative when having
total freedom.&lt;/p&gt;

&lt;p&gt;Because of that I’ve had to learn more about myself and what rules and
habits I need to set up for myself to keep growing.&lt;/p&gt;

&lt;h3 id=&quot;short-term-satisfaction-vs-long-term-happiness&quot;&gt;Short-term satisfaction vs. long-term happiness&lt;/h3&gt;

&lt;p&gt;It’s always easy to do simple, well-defined tasks. But apart from the
short-term satisfaction of ticking it off my to-do list or sharing my
progress publicly, there is not much else to it.&lt;/p&gt;

&lt;p&gt;In order to be happy I need to do hard things. Untangle ill-defined and
fuzzy problems, navigate and unwrap spaghetti legacy code while implementing
a new feature - that’s what keeps me going.&lt;/p&gt;

&lt;p&gt;I still need to have some easy wins on my to-do list, but they can’t take it
over. Working towards the long-term goal every day, regardless of my
motivation level, should be prioritized.&lt;/p&gt;

&lt;h3 id=&quot;sources-of-inspiration&quot;&gt;Sources of inspiration&lt;/h3&gt;

&lt;p&gt;I get inspired all the time:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;My inbox is full of newsletters and emails on programming, design, and
MOOCs I’d like to take part in.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;I answer many questions every day, ranging from workflow skills, through
basic programming concepts and specific language issues, to intricate
problems I’m sometimes not sure I even understand. This makes me
constantly search for answers by using a lot of googling, skimming docs
and StackOverflow, but also through asking the right questions.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Discussing any topic in the two realms I’m a user of can be a first step
to an hours-long or even all-night journey into a world of new concepts.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Reviewing submissions and reading others’ code inspires my to constantly
question my skills and look for answers - how did they do that? what’s
the issue here? how do I even…?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Playing boardgames. The hardest time I’ve had recently with switching
my creative mode off was after two hours of playing &lt;a href=&quot;https://boardgamegeek.com/boardgame/39856/dixit&quot;&gt;Dixit&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It’s wonderful to learn new things in a wide range of topics. Managing
incoming inspirations and keeping myself from multitasking is a challenge.
Which is evident even from the &lt;a href=&quot;https://paper.dropbox.com/doc/Reading-list-first-month-FqGUhYlpF1iUQx2FnbaGe&quot;&gt;list of articles&lt;/a&gt;
that inspired me to grow as a programmer in the past month.&lt;/p&gt;

&lt;h3 id=&quot;gathering-scattered-thoughts&quot;&gt;Gathering scattered thoughts&lt;/h3&gt;

&lt;p&gt;I’ve tried many approaches for managing the influx of information and my
creative output. At the moment I use a simple system:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://habitica.com/&quot;&gt;Habitica&lt;/a&gt; for daily tasks and my to-do list.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.one-tab.com/&quot;&gt;OneTab&lt;/a&gt; to convert my tabs into a list.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;A plethora of text files scattered around multiple folders to note
incoming waves of ideas and save any emails or messages I
particularly liked. They mainly consist of various lists.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Although I have been using GitHub and other tools when working with others,
I haven’t found a better approach to managing my own workflow. I’ve tested
many until I realized I’m spending more time on improving productivity
than being productive.&lt;/p&gt;

&lt;h3 id=&quot;how-to-grow&quot;&gt;How to grow&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Set boundaries and a simple enough system that works for you.&lt;/p&gt;

    &lt;p&gt;Have regular focused time and a dedicated space, even if that space is
putting your laptop on your lap. Don’t lose your focus on distractions.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Work on your communication.&lt;/p&gt;

    &lt;p&gt;Listen attentively and be fully in the moment whenever you decide to
talk to someone. Try to understand other perspectives and think of them
when communicating your ideas.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Get distracted in a controlled way.&lt;/p&gt;

    &lt;p&gt;When it’s time to focus, try to eliminate distractions. If you can’t turn
off notifications, allows yourself to quickly assess their importance.
Take note of anything you want to investigate later.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Teach.&lt;/p&gt;

    &lt;p&gt;You can rarely be sure you know something before you explain it to
someone else. Teaching is an opportunity to learn.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;The term &lt;em&gt;disorienting level of freedom&lt;/em&gt; is directly cited from Allison
Kaptur’s talk on &lt;a href=&quot;https://www.youtube.com/watch?v=Mcc6JEhDSpo&quot;&gt;effective learning strategies for programmers&lt;/a&gt;. It’s a great talk to watch!&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Yes,_and...&quot;&gt;&lt;em&gt;Yes, and…&lt;/em&gt;&lt;/a&gt; is the most
important rule of improvisational theatre. Should you ever get a chance to
try improv, go for it! It was one of the best experiences during my batch at
the Recurse Center.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;</content>
              


              
              
              
              
              

              
                <author>
                    <name>alicja</name>
                  
                  
                </author>
              

              

              

              
                <summary type="html">The past few months have been an ongoing adventure for me - an adventure in learning to manage the disorienting level of freedom I’ve had to face.</summary>
              

              
              
            </entry>
          
        
      
        
          
        
      
        
          
        
      
    
  
    
      
        
          
        
      
        
          
            <entry>
              <title type="html">Outreachy - first month recap</title>

              
                <link href="https://trueskawka.github.io/zulip/outreachy/gci/blog/2017/01/11/outreachy-first-month-recap.html" rel="alternate" type="text/html" title="Outreachy - first month recap" />
                <published>2017-01-11T23:48:00+01:00</published>
                <updated>2017-01-11T23:48:00+01:00</updated>
                <id>https://trueskawka.github.io/zulip/outreachy/gci/blog/2017/01/11/outreachy-first-month-recap</id>
                <content type="html" xml:base="https://trueskawka.github.io/zulip/outreachy/gci/blog/2017/01/11/outreachy-first-month-recap.html">&lt;p&gt;I’ve been asked today to reflect on my first Outreachy month and share
what I’ve done so far.&lt;/p&gt;

&lt;h3 id=&quot;initial-proposal&quot;&gt;Initial proposal&lt;/h3&gt;

&lt;p&gt;I admit I’ve felt queasy about it at first - after
all, my initial &lt;a href=&quot;https://paper.dropbox.com/doc/Outreachy-proposal-QfwrTnnGBDBd9hBGCyUjT&quot;&gt;proposal&lt;/a&gt;
was full of ambitious goals that were to be driven by the regular expected
levels of productivity.&lt;/p&gt;

&lt;p&gt;That didn’t happen. I have made mistakes on the way:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;I let my momentum get lost while visiting family for the better part of
November and it took time to regain it after I got back home.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;I am still struggling with sharing imperfect code and contributions, even
though as a mentor I know their value.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;I got completely involved in the Google Code-In, because after the initial
stress of being inexperienced and unable to help the students, it became
easier and easier with every week to focus on it.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;I got used to my to-do list getting longer and longer, focusing more on
immediate tasks than long-term goals. It’s easier to tick off “create
a GCI task” than “implement this big and fuzzy issue”.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;What it meant for my proposal - I haven’t worked on most of my planned tasks
when planned:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;The CSS splitting got behind the Zulip redesign and I was able to split
only one part since my pre-Outreachy splits, as everything else is in the
midst of changes and refactoring.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Building screenshots and improving Casper tests is still on my to-do list,
but the only steps I’ve taken so far is reading the Casper docs, tinkering
a bit with our Casper doc and refactoring the task into more actionable
steps earlier this week.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;My work on interactive bots was late, but since it was part of my GCI
responsibilities, I’ve managed to learn how to create bots and wrote the
tasks for them. Over the past few weeks I’ve also helped students work
on the bots and learned a lot from them (more on that later on).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;I haven’t worked on issues related to stream flow.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;what-i-have-been-working-on&quot;&gt;What I have been working on&lt;/h3&gt;

&lt;p&gt;My contributions concerned mostly GCI improvements and communication, with
some minor work towards my general goals. I’ve found it much easier to
write and be social - respond to messages, review pull requests, help
students with tasks, create documents - than to focus on my own code.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;I have created the &lt;a href=&quot;https://github.com/zulip/zulip-gci/blob/master/tasks/interactive-bots.md&quot;&gt;interactive bots tasks&lt;/a&gt;
for the GCI students.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;I have created the &lt;a href=&quot;https://github.com/zulip/zulip-gci/blob/master/tasks/translations.md&quot;&gt;translation tasks&lt;/a&gt; for
the GCI students and wrote the &lt;a href=&quot;https://github.com/zulip/zulip/pull/2439&quot;&gt;initial Polish style guide&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;I have written a doc on &lt;a href=&quot;https://github.com/zulip/zulip-gci/blob/master/docs/improving-gci-experience.md&quot;&gt;improving the GCI experience&lt;/a&gt;
as a reflection and a shared set of experiences. I have also written an
internal doc for mentors on encouraging students.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;I &lt;a href=&quot;https://github.com/zulip/zulip/pull/2128&quot;&gt;split the right sidebar CSS&lt;/a&gt;
from the main &lt;code class=&quot;highlighter-rouge&quot;&gt;zulip.css&lt;/code&gt; file.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;I have had 3 GCI shifts a week for reviewing student submissions and
helping them on Zulip. I’ve also been helping students, posting various
reflections, and discussing issues and improvements quite a lot.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I also currently have multiple tasks in line:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;I posted a work-in-progress pull request on a &lt;a href=&quot;https://github.com/zulip/zulip/pull/2721&quot;&gt;muted streams prompt&lt;/a&gt; that needs refactoring and
better testing.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;I’m working on building CSS linters after a &lt;a href=&quot;https://chat.zulip.org/#narrow/stream/test.20suites/topic/linting&quot;&gt;fruitful chat with Steve&lt;/a&gt; [you
have to be logged in &lt;a href=&quot;https://chat.zulip.org&quot;&gt;Zulip&lt;/a&gt;]. I am also creating
a write-up of this discussion for further use.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;I have a React Native app &lt;a href=&quot;https://github.com/zulip/zulip-mobile/issues/181&quot;&gt;issue assigned&lt;/a&gt; - so far I’ve a working
environment and I’ve tried to trigger the issue with no luck on my mobile
device.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;I have a draft write-up about Casper testing and will be improving the
existing &lt;a href=&quot;https://zulip.readthedocs.io/en/latest/testing-with-casper.html&quot;&gt;Zulip Casper doc&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;I have a few draft posts on mypy, open-source skills and improving as an
intermediate programmer.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;actionable-goals&quot;&gt;Actionable goals&lt;/h3&gt;

&lt;p&gt;For the next two months of my internship, I want to focus more on my own
contributions, especially putting my coding skills to good use. Google
Code-In is ending soon, which will free up my schedule and prevent me from
focusing entirely on mentoring. Alas, I need some actionable goals, since
my initial proposal was too vague and I got easily distracted with better
defined tasks.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;I will refactor each of the tasks currently in line (and any future task)
and split them into smaller, better defined ones, with more specific
deadlines.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;I will check in daily, as it’s much harder to be vague when informing
others what I’ve been up to.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;I will set aside time for big picture ideas on possible enhancements and
creative writing on non-technical aspects of software development and I
will be focused on the task at hand outside of those intervals.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;I will follow a more regular schedule instead of working in irregular
intervals of varied lengths.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content>
              


              
              
              
              
              

              
                <author>
                    <name>alicja</name>
                  
                  
                </author>
              

              

              

              
                <summary type="html">I’ve been asked today to reflect on my first Outreachy month and share what I’ve done so far.</summary>
              

              
              
            </entry>
          
        
      
        
          
        
      
        
          
        
      
    
  
    
      
        
          
        
      
        
          
        
      
    
  
    
      
        
          
        
      
        
          
        
      
    
  
    
      
        
          
        
      
        
          
        
      
    
  
    
      
        
          
        
      
        
          
        
      
    
  
    
      
        
          
        
      
        
          
        
      
    
  
    
      
        
          
        
      
        
          
            <entry>
              <title type="html">To mentor</title>

              
                <link href="https://trueskawka.github.io/zulip/outreachy/gci/blog/2017/01/03/to-mentor.html" rel="alternate" type="text/html" title="To mentor" />
                <published>2017-01-03T03:27:00+01:00</published>
                <updated>2017-01-03T03:27:00+01:00</updated>
                <id>https://trueskawka.github.io/zulip/outreachy/gci/blog/2017/01/03/to-mentor</id>
                <content type="html" xml:base="https://trueskawka.github.io/zulip/outreachy/gci/blog/2017/01/03/to-mentor.html">&lt;p&gt;When I first heard Zulip is taking part in Google Code-In and was asked to
become a mentor, I got excited. And scared. The more time passed, the more
scared I was, feeling inadequate and not experienced enough to review other
people’s code.&lt;/p&gt;

&lt;p&gt;After the first week of GCI I was terrified. It felt like the reviews were
a never-ending battle between the quality and quantity (GCI students are motivated to do as many tasks as possible due to the contest rules). I’ve
constantly been asked questions I didn’t know the answers to and was
expected to understand features from a large chunk of the codebase - larger
than I felt comfortable with.&lt;/p&gt;

&lt;p&gt;I felt like I was only disturbing the learning process and irritating the
students with my constant questions and nagging for improvements. I was
learning a lot to my own benefit:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;After explaining git flow many times, I finally feel confident while working in the terminal and not just pretending to be comfortable with it.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;I’ve learned to rebase, amend and merge other’s work into the
  codebase.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;I’ve created a group of tasks on interactive bots and learned more
  from students asking questions about them than from creating my own bot.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;I’ve had a comprehensible conversation in German with one of the
  students, which is a big deal for me since I haven’t used the language
  in years.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Gradually, I became more and more confident with code reviews and helping
out on chat. I’ve read a bunch of articles on multiple topics concerning
Python, APIs, webhooks, frontend testing and typing. I’ve learned a ton
from reading other mentors’ reviews of the contributions. I’m now able to
calmly read a question and not panic when I initially don’t know the
answer, even though I’m &lt;em&gt;supposed to&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Being in this double role of a mentee and a mentor, I think I benefited
much more from GCI than I thought possible. Also, Zulip is rapidly being
improved by many motivated students - hundreds of mypy annotations were
added, multiple features were fixed, many interactive bots were introduced, and a ton of user documentation was written. I did not expect for it to go
this well.&lt;/p&gt;

&lt;p&gt;Over the past few weeks I’ve also had a lot of thoughts on improving the
process and communication, even going as far as to have &lt;a href=&quot;https://github.com/zulip/zulip-gci/pull/394&quot;&gt;pull request&lt;/a&gt; for that.&lt;/p&gt;

&lt;h3 id=&quot;whats-important-to-the-mentor&quot;&gt;What’s important to the mentor&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Give context.&lt;/p&gt;

    &lt;p&gt;When asking for help or a review, give the mentor some context on the
  issue. They are working on multiple issues and helping many people -
  they might not immediately remember all the relevant facts. Show what
  you have already done to solve the problem.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Think about the user.&lt;/p&gt;

    &lt;p&gt;When developing a feature, think about the user perspective whenever
  applicable. What are the expected use cases? What would be comfortable
  to use, not just simple and reasonable to implement?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Respect others’ time.&lt;/p&gt;

    &lt;p&gt;Before submitting anything, make sure you took care of any sloppiness
  (typos, linter errors, unnecessary chunks of code). Test your feature
  manually. Make sure you are asking for help for something you weren’t able to solve, not something you forgot to check.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Don’t expect simple answers.&lt;/p&gt;

    &lt;p&gt;When asking questions, expect help, but be prepared to accept it in
  the form it’s been offered. If a mentor is pointing you to an external
  resource or asking you to double check your implementation, they’re
  doing it to help you learn.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Don’t be embarrassed.&lt;/p&gt;

    &lt;p&gt;Sometimes you might think asking a question will make you look&lt;br /&gt;
  inadequate. Don’t let this keep you stuck. If you’ve tried and failed,
  there is nothing to be ashamed of.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Strive for self-guidance.&lt;/p&gt;

    &lt;p&gt;Have ownership of your work - both the solutions and the problems. Be
  proud of your achievements, however small. You are learning here and the best way to learn is to take responsibility.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Stay positive.&lt;/p&gt;

    &lt;p&gt;I’m sure you can do it - so you should be too. Don’t discourage yourself
  and lessen your skills. You are here to learn and I’m here to help you,
  there is nothing wrong with making mistakes on the way. Just be sure to
  understand and learn from them.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content>
              


              
              
              
              
              

              
                <author>
                    <name>alicja</name>
                  
                  
                </author>
              

              

              

              
                <summary type="html">When I first heard Zulip is taking part in Google Code-In and was asked to become a mentor, I got excited. And scared. The more time passed, the more scared I was, feeling inadequate and not experienced enough to review other people’s code.</summary>
              

              
              
            </entry>
          
        
      
        
          
        
      
        
          
        
      
    
  
    
      
        
          
        
      
        
          
            <entry>
              <title type="html">To be mentored</title>

              
                <link href="https://trueskawka.github.io/zulip/outreachy/blog/2017/01/02/to-be-mentored.html" rel="alternate" type="text/html" title="To be mentored" />
                <published>2017-01-02T23:25:00+01:00</published>
                <updated>2017-01-02T23:25:00+01:00</updated>
                <id>https://trueskawka.github.io/zulip/outreachy/blog/2017/01/02/to-be-mentored</id>
                <content type="html" xml:base="https://trueskawka.github.io/zulip/outreachy/blog/2017/01/02/to-be-mentored.html">&lt;p&gt;One of my fellow Recursers is actively researching needs of newbie
developers and interviewing juniors, mentors and anyone else engaged in hiring programmers who are starting out. Given my experience so far, I more than qualified for an interview as a tech industry newbie.&lt;/p&gt;

&lt;p&gt;At first I thought I wouldn’t have any relevant insights, since my
experience is very fresh and I haven’t encountered any of the serious problems many face in tech. I started talking and only realized about 45 minutes later that our chat is nearly over.&lt;/p&gt;

&lt;h3 id=&quot;first-developer-job---no-mentoring&quot;&gt;First developer job - no mentoring&lt;/h3&gt;

&lt;p&gt;The team I worked with in my first development job was not experienced in software development. They were, just like me, mostly economists who learned to program, without any previous experience in building applications. Even though they’ve done thorough research and managed to build a pretty good product, I was constantly struggling.&lt;/p&gt;

&lt;p&gt;I didn’t have an experienced developer as a mentor, so I felt I was
learning only through making mistakes. It’s not wrong to make mistakes and fix them, but it can’t be the only learning strategy for effective development. The job was more about quick fixes and tiny new features than important contributions that enhanced the core product. I was barely taken into account when building important features, usually as a person who’d
work on implementation rather than an equal contributor.&lt;/p&gt;

&lt;p&gt;I didn’t have the words to name most of my concerns. I felt that no one cared about my growth as a developer and an employee, even if that could be beneficial for the company in the long term. Most of the time I wasn’t sure I was doing things right and had serious doubts if I was even working on the right things.&lt;/p&gt;

&lt;p&gt;I felt that I was the only person who had these problems. How
could I pinpoint such vague ideas like “you are interrupting my learning process” and “I don’t think this solution is something we want to do, since
it’s not best practice”, especially when I didn’t know how the process
should look like or what are the best practices?&lt;/p&gt;

&lt;h3 id=&quot;recognizing-bad-mentoring&quot;&gt;Recognizing bad mentoring&lt;/h3&gt;

&lt;p&gt;I was very lucky to spend three months at the Recurse Center, where I was
encouraged to ask questions and voice my concerns. The concerns were taken
seriously, even if I felt I’m being overly sensitive. That helped me
recognize bad mentoring, among other behaviors I couldn’t previously name.&lt;/p&gt;

&lt;p&gt;I’m not saying any of my mentors intended not to help me or were driven by the wrong things. Bad mentoring is not about intent, but the way of approaching a problem. Mentoring should be about helping the mentee with
their problem at hand, in a way that helps them grow and encourages them to try and learn. It’s a skill to be learned.&lt;/p&gt;

&lt;p&gt;Bad mentors ask questions they already know the answers to and get impatient when they don’t receive the right answer quickly. They sometimes answer their own questions to speed up the process and correct the details before making sure the mentee even understands the problem. They say something is “obvious” or “easy”, which further discourages the mentee from trying.&lt;/p&gt;

&lt;p&gt;Bad mentors answer the problem they see, not the one the mentee asked to be
helped with. They focus on their comfort and the &lt;em&gt;right&lt;/em&gt; approach instead
of focusing on the mentee’s learning process. They sometimes don’t even try
to help with the actual problem, but rephrase the issue to answer
something that’s more interesting or easier for them to explain.&lt;/p&gt;

&lt;p&gt;Bad mentors don’t give the mentee time to find answers on their own and
explore. They don’t want to explore with the mentee. They throw resources at the mentee and don’t set up a feedback loop that would encourage them
to communicate.&lt;/p&gt;

&lt;p&gt;I think bad mentors in tech are often experienced and skilled developers
who forgot how hard it was to get to where they are and didn’t think to ask.&lt;/p&gt;

&lt;h3 id=&quot;building-a-relationship-with-a-mentor&quot;&gt;Building a relationship with a mentor&lt;/h3&gt;

&lt;p&gt;One of my best friends at the Recurse Center was also my first great mentor.
Over the course of our batch we developed a relationship based on trust and
mutual respect, motivating each other to grow. I still think I got more
out of this dynamic, even though I’ve been a mentor myself for the past
few weeks and I know how much I’ve learned from that.&lt;/p&gt;

&lt;p&gt;My first great mentor expected me to not give up on my problems and approach
them with a curious mind, instead of stressing out and feeling inadequate.
He expected me to first try and answer my own questions, even if I was
worried I’d get them completely wrong. He’d discuss features with me and make sure I understand what’s happening, addressing relevant parts of my
input.&lt;/p&gt;

&lt;p&gt;Whenever I got lost, I could just ask him, even if it felt like the stupidest question ever. The fear of embarrassing myself gradually went
away thanks to all the confidence he had in me. After a few weeks, it felt more like a partnership of equals than mentoring, even though there was a
vast difference in our knowledge and experience.&lt;/p&gt;

&lt;h3 id=&quot;working-with-open-source-mentors&quot;&gt;Working with open-source mentors&lt;/h3&gt;

&lt;p&gt;When I started working with Zulip I didn’t know any of my soon to be
mentors. They could only learn about me from chat and my contributions,
without having the opportunity to get to know me in person, which could
help me be more confident. I’ve been entering this community of awesome
developers and all of them knew much more than I did - how could I possibly
bring value?&lt;/p&gt;

&lt;p&gt;I was lucky again since Zulip maintainers and contributors are not only
welcoming to newbie developers, but also have experience with introducing
them to the project. Zulip has great &lt;a href=&quot;https://zulip.readthedocs.io/en/latest/&quot;&gt;documentation&lt;/a&gt; and the team is
very responsive on chat.&lt;/p&gt;

&lt;p&gt;When working on a feature, mentors would set up a context for my work,
providing any relevant information and making sure I understand the
problem well. They’d answer my questions and encourage me to share
work-in-progress code to drive the conversation.&lt;/p&gt;

&lt;p&gt;From day one I was treated like a contributor, a partner, not a problem. I
was taken seriously and expected to be a responsible community member. My
input was valued and taken into account, my questions answered. I was also
constantly encouraged with gradual code reviews that improved my skills and
workflow tremendously over the span of a month (and are still improving).&lt;/p&gt;

&lt;h3 id=&quot;dealing-with-the-real-world&quot;&gt;Dealing with the &lt;em&gt;real world&lt;/em&gt;&lt;/h3&gt;

&lt;p&gt;A newbie developer and a woman, I’m sure to face some communication issues
in my future endeavors. I will have to prove my abilities and substantiate
my reasoning. That’s why I also seek out more direct and less welcoming mentors, who will compare my solutions to optimal ones and not make it
any easier for me to solve problems.&lt;/p&gt;

&lt;p&gt;It’s not easy to deal with direct questions about my implementation and
go into the nitty-gritty of my code without the comfort of additional research and asynchronous communication. I do however need to know my stuff
cold if I want to become a better developer, so I welcome mentors who are
harder to deal with.&lt;/p&gt;

&lt;h3 id=&quot;whats-important-to-the-mentee&quot;&gt;What’s important to the mentee&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Believing in them.&lt;/p&gt;

    &lt;p&gt;It’s not only about supporting the mentee, but also challenging them and giving them real responsibilities from the very start. Building a relationship based on trust requires accountability and a good way to motivate oneself to deliver is knowing someone needs our input.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Being excited about their growth.&lt;/p&gt;

    &lt;p&gt;Every review at Zulip begins and ends with a positive note. Start with
  a thank you when the mentee is asking for a review - they are learning
  and a great way to learn is to build and improve.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Setting up a learning environment.&lt;/p&gt;

    &lt;p&gt;Give the mentee context for their work - point them to other
  contributions and relevant docs. Treat code reviews as learning
  opportunities and give incremental steps to improve the mentee’s work,
  starting from the core functionality and expecting more and more
  self-guidance and quality.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Encouraging them to leave their comfort zone.&lt;/p&gt;

    &lt;p&gt;Ask the mentee to read others’ code, support them in mentoring less
  experienced contributors. Push them to share their code early with
  work-in-progress pull requests - I for one had to talk myself out of
  being this perfect person, who should never share their mistakes.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Introducing different kinds of mentors.&lt;/p&gt;

    &lt;p&gt;Encourage the mentee to ask multiple mentors for advice and help. Let
  them learn how to communicate with other team members and benefit
  from their guidance.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Balancing the amount of information.&lt;/p&gt;

    &lt;p&gt;Don’t give the mentee answers right away, but don’t leave them hanging
  for too long. Start with not giving enough and gradually find a balance
  with providing more details while expecting more self-guidance. Stop
  before you answer your own questions.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content>
              


              
              
              
              
              

              
                <author>
                    <name>alicja</name>
                  
                  
                </author>
              

              

              

              
                <summary type="html">One of my fellow Recursers is actively researching needs of newbie developers and interviewing juniors, mentors and anyone else engaged in hiring programmers who are starting out. Given my experience so far, I more than qualified for an interview as a tech industry newbie.</summary>
              

              
              
            </entry>
          
        
      
        
          
        
      
    
  
</feed>
