<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xml" href="/feed.xslt.xml"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
  <generator uri="http://jekyllrb.com" version="3.5.0">Jekyll</generator>
  
  <link href="https://trueskawka.github.io/feed.xml" rel="self" type="application/atom+xml" />
  <link href="https://trueskawka.github.io/" rel="alternate" type="text/html" hreflang="en" />
  
  <updated>2017-11-16T21:03:37+01:00</updated>
  
    <id>https://trueskawka.github.io/</id>
  

  
    <title type="html">Alicja Raszkowska</title>
  

  
    <subtitle>Alicja's website and blog.
</subtitle>
  

  

  
    
      
        
          
        
          
            <entry>
              <title type="html">Designing HTML emails</title>

              
                <link href="https://trueskawka.github.io/blog/programming/2017/11/16/designing-HTML-emails.html" rel="alternate" type="text/html" title="Designing HTML emails" />
                <published>2017-11-16T20:49:00+01:00</published>
                <updated>2017-11-16T20:49:00+01:00</updated>
                <id>https://trueskawka.github.io/blog/programming/2017/11/16/designing-HTML-emails</id>
                <content type="html" xml:base="https://trueskawka.github.io/blog/programming/2017/11/16/designing-HTML-emails.html">&lt;p&gt;It’s 2017 and it seems that plain text emails are just boring for most users.
Communicating without the emoji, GIFs or images seems rather stiff and your
brand is better than that! It’s approachable and fun, or sleek and high-end, or
in some other way remarkable. No plain text email will do.&lt;/p&gt;

&lt;p&gt;The world of HTML email is the Wild Wild West of the World Wide Web. It’s
basically writing websites like it’s 2004. Forget flexible user interfaces or
interactive elements  - it’s built on tables upon tables, with no JavaScript
and poor CSS support. If you want your design not to break on major clients,
you need to carefully place and think through each element, keeping in mind all
the various ways that your design could break.&lt;/p&gt;

&lt;h3 id=&quot;how-is-email-displayed&quot;&gt;How is email displayed?&lt;/h3&gt;
&lt;p&gt;The email is sent from a server to an email address that is hosted on another
server. This server then shares the email with various email clients (e.g. the
Mail app on iOS), that decide how to display the content. The server and/or
email client can strip away some or even all elements that are not plain text -
specific or all HTML tags, styles, images, links - leaving the user with the
end content, that is then being displayed.&lt;/p&gt;

&lt;p&gt;The main difference between an email and a website is that you can’t know
what email client the user is going to choose and so you can’t send a specific
version to each user - you send the same email to everyone. You can’t detect
beforehand if it’s Firefox or Chrome, Gmail or Outlook, you can’t swap images
for smaller versions on mobile. You send an email and it sits in your client’s
inbox - as soon as they get it, you have no control over how it’s going to be
displayed and can’t adjust accordingly.&lt;/p&gt;

&lt;h3 id=&quot;understand-your-users&quot;&gt;Understand your users&lt;/h3&gt;
&lt;p&gt;If you ever went through building a static website or a web app, figuring out
how to support the features you want in most browsers was hard enough. Nobody
expects every web app to work perfectly on every setup - that would take insane
amounts of work and give very low marginal gains. That’s why web developers are
telling you they’re going to support the modern browsers like Chrome or Firefox
and no-one in their right mind wants to support older Internet Explorers*.&lt;/p&gt;

&lt;p&gt;Testing with tools like &lt;a href=&quot;https://litmus.com/&quot;&gt;Litmus&lt;/a&gt; or &lt;a href=&quot;https://www.emailonacid.com/&quot;&gt;Email on
Acid&lt;/a&gt; will help you get a better grasp of how
your design works in most popular email clients - but there can still be issues
with clients that are not being tested by those tools. It is impractical to
expect the email to work in &lt;strong&gt;all&lt;/strong&gt; clients - that’s why it’s good to research
how your clients are using email.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;What &lt;a href=&quot;https://en.wikipedia.org/wiki/Comparison_of_webmail_providers&quot;&gt;webmail
providers&lt;/a&gt;
and/or &lt;a href=&quot;https://en.wikipedia.org/wiki/Comparison_of_email_clients&quot;&gt;email
clients&lt;/a&gt; are they
using? Which of those give you most marginal gains and you need to support
them? Consider having a cutoff point for the share of various software in your
client base - adding support for additional clients takes time and might also
cost you some features, maybe it’s not worth doing for 0.01% of your clients.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;How are they accessing their inbox? Do they read emails on their desktop or
their phones? Decide if you want to design mobile- or desktop-first.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;What email campaigns worked best for the measures that are important to you,
e.g. how many of your users click links in emails? Think about the things you
want to include in your email - you’re taking the time to design it, so make
sure you’re not spamming your users with irrelevant content.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;focus-on-the-content&quot;&gt;Focus on the content&lt;/h3&gt;
&lt;p&gt;There are many reasons your users will only read plain text emails - some of
them do it by choice, some of them by necessity, e.g. if they are visually
impaired, some simply use email clients that only support plain text. That’s
one thing every email client does and they do it pretty well.&lt;/p&gt;

&lt;p&gt;Before you design your email, take a moment to focus on the message - why are
you sending an email to your users? If you were to strip away all the design,
what should be included in it? How should you divide it into paragraphs and
make sure the users get your message?&lt;/p&gt;

&lt;p&gt;Assuming that your users will always be able to read the HTML version of your
email might be overly optimistic. Don’t assume - assure that your message
always gets through and use plain text as your main tool.&lt;/p&gt;

&lt;p&gt;There are also things you should consider including in your email, to improve
user experience no matter the client:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;subject - clear and concise, usually under 50 characters&lt;/li&gt;
  &lt;li&gt;professional sender address and name - preferably with your company name&lt;/li&gt;
  &lt;li&gt;pre-header text - some email clients present it in the inbox as a preview of
an email&lt;/li&gt;
  &lt;li&gt;footer - preferably with unsubscribe options&lt;/li&gt;
  &lt;li&gt;link to a web-hosted version of the email&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;add-the-design-gradually&quot;&gt;Add the design gradually&lt;/h3&gt;
&lt;p&gt;You might want to include more than just plain text in your message - your logo
at the top, an image or a GIF that would make it more appealing, a nice button
to encourage users to click the link.&lt;/p&gt;

&lt;p&gt;Keep the design simple. Add it in gradually and make sure you always have
fallback options, e.g.:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;for every image have a fallback text that displays before the images are
loaded, e.g. Gmail often loads images after a user action, so take the time to
look at your design with placeholder text instead of images&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;many clients, including Gmail, won’t support custom fonts (unless the user
has them already installed on their computer) - use web fonts to make the
design more appealing on some clients, but always have a fallback option like
&lt;code class=&quot;highlighter-rouge&quot;&gt;Arial&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;Helvetica&lt;/code&gt; handy; check how your design looks with the fallback font&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;if you’d like something slightly more fancy, like a video or an interactive
element, keep in mind it won’t be supported in most email clients and simply
link to it in your email in an appealing way&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;rethink-flexibility&quot;&gt;Rethink flexibility&lt;/h3&gt;
&lt;p&gt;In web development, we’re getting more and more used to flexible, seamless
designs that flow with the ever changing screen size of our devices. Emails,
even though they use the same basic blocks of HTML and CSS, are not that
advanced - to adjust for different devices, you need to make your design fluid
rather than flexible.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Some email clients don’t support media queries - if you want to go from
two-column design to a single mobile column or even just adjust the font size,
keep in mind Android or any number of less popular mobile clients might not
agree with you.&lt;br /&gt;&lt;br /&gt;
There are two main breakpoints in email - 600px for desktop and 320px for
mobile - but the most bulletproof way is to avoid them altogether, by either
using a device-agnostic single-column design or making your design fluid rather
than flexible. Think percentages, not breakpoints, define margins and paddings
rather than set sizes.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Don’t expect emails to be pixel-perfect - you might really like those
rounded corners on your buttons, but making them work in older clients is going
to take a lot of work using images and careful placing, that might break on
some clients regardless of all the effort.&lt;br /&gt;&lt;br /&gt;
Start with a simple, flat design and add improvements for more modern clients,
but don’t expect them to work across all devices. Just make sure that adding
additional elements or flavors is not breaking your base design.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;You can’t control your users - some users adjust their setups and increase
the default fonts, make their displays monochrome or block images by default.
You won’t know how your users see the email exactly and that’s ok - if you
design with a fluid approach in mind, they’ll still be able to read your
message and find the relevant information.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;mind-the-quirks&quot;&gt;Mind the quirks&lt;/h3&gt;
&lt;p&gt;There are many effects and elements you might be used to that cause
mind-boggling issues in HTML emails. Some of the more common ones are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;custom fonts - you can get away with web fonts, but not all clients support
them; also, you have no control over user-specific settings, e.g. if they’re
using an increased font in Android, the email client might render it regardless
of all your efforts to avoid it&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;overlapping elements/layers - you can’t overlap elements in emails, other
than adding a background image, and even that might not work in some clients,
but careful use of whitespace might help you achieve a similar effect&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;putting text in symmetrical shapes - there are no flexible CSS properties to
ensure the shape will stay symmetrical, so it’s better to use ovals than
circles and rectangles than squares&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;motion/animation - email clients don’t support JavaScript and most of them
don’t work well with CSS animations, so there is virtually no way to make them
interactive&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;hiding overflow - if you want to truncate text, do it before sending the
email, as hiding overflow might be problematic&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;gradients - they won’t display in many clients and can cause a solid
background color to obscure text&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;non-image shapes other than rectangles - some email clients won’t support
border-radius for circles or rounded corners, most don’t play well with more
complicated shapes - try to keep it simple with rectangles and/or images&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This is not an exhaustive list, but it can give you some ideas on where to
simplify your design.&lt;/p&gt;

&lt;h3 id=&quot;reading-code&quot;&gt;Reading code&lt;/h3&gt;
&lt;p&gt;If you have some experience with regular web development, you might expect the
code to be written in a certain way. HTML email code breaks many of the best
practices one gets used to.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;In modern web development, using the &lt;code class=&quot;highlighter-rouge&quot;&gt;!important&lt;/code&gt;  keyword too much (or
ever) or inlining styles are often considered code smells. In HTML emails they
might the only way to display the email as intended - it’s not uncommon to see
an inlined style with &lt;code class=&quot;highlighter-rouge&quot;&gt;!important&lt;/code&gt;,  just to force this one stubborn email
client to render it properly.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Email code is not DRY - you can define both a &lt;code class=&quot;highlighter-rouge&quot;&gt;background&lt;/code&gt; property on a
table and add a declaration for the &lt;code class=&quot;highlighter-rouge&quot;&gt;background&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;background-image&lt;/code&gt;  in the
inlined style for the same element, just because some clients support the table
property, some understand only the &lt;code class=&quot;highlighter-rouge&quot;&gt;background&lt;/code&gt; shorthand and there are those
quirky ones, that only render the &lt;code class=&quot;highlighter-rouge&quot;&gt;background-image&lt;/code&gt; if forced by a more
specific declaration. Oh, and don’t forget about this class that also sets the
&lt;code class=&quot;highlighter-rouge&quot;&gt;background&lt;/code&gt; with &lt;code class=&quot;highlighter-rouge&quot;&gt;!important&lt;/code&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Arranging elements in email uses tables, which is the most widely supported
HTML element across all clients. If you want to make sure your layout is going
to work, the number of tables within tables can increase dramatically with each
element.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;summary&quot;&gt;Summary&lt;/h2&gt;
&lt;p&gt;Designing emails is different from designing websites - email clients have at
best patchy support for CSS and often require writing code that breaks the best
practices of web development.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Understand your users - have a list of email clients you want to support,
understand what to include in your emails and how to appeal to your user base.
Decide if you want to design mobile or desktop first.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Focus on the content - write a plain text email first, structuring it by
using paragraphs, bullet points, links. Make sure to always include plain text
version of your message.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Add the design gradually - the simpler the email, the better the chance it’s
going to work well on multiple clients. Add in fallback for your features
(images, fonts, videos) and make sure to check how your message looks using
only the fallbacks.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Rethink flexibility - think fluid, not flexible. You can’t control how your
user is going to see the design, so let go of pixel-perfect and make sure to
design with percentages and paddings, rather than set sizes.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Mind the quirks - the simpler, the better. Email clients have many quirks
and the more complicated the design, the higher the chance it’s going to look
bad in some clients.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Reading code - email clients require you to write code that’s not in line
with web development best practices. Get used to &lt;code class=&quot;highlighter-rouge&quot;&gt;!important&lt;/code&gt; and loads of
tables.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;useful-links&quot;&gt;Useful links&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;Xfive &lt;a href=&quot;https://www.xfive.co/blog/10-tips-better-email-design/&quot;&gt;10 Tips for Better Email
Design&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Tuts+ &lt;a href=&quot;https://webdesign.tutsplus.com/articles/the-complete-guide-to-designing-for-email--webdesign-12941&quot;&gt;The Complete Guide to Designing for
Email&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Sigstr &lt;a href=&quot;https://www.sigstr.com/2017/05/23/email-structure-scientifically-backed-guide/&quot;&gt;How People ACTUALLY Read Your
Emails&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Campaign Monitor &lt;a href=&quot;https://www.campaignmonitor.com/css/&quot;&gt;CSS Support Guide for Email
Clients&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;MailChimp &lt;a href=&quot;https://mailchimp.com/email-design-guide/&quot;&gt;Email Design Guide&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Webdesigner Depot &lt;a href=&quot;https://www.webdesignerdepot.com/2014/06/the-ultimate-guide-to-email-design/&quot;&gt;The ultimate guide to email
design&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;hr /&gt;

&lt;p style=&quot;font-size: 14px&quot;&gt;*though it is sometimes necessary to support IE8, but that's mostly because target user group uses outdated software&lt;/p&gt;</content>
              


              
              
              
              
              

              
                <author>
                    <name>alicja</name>
                  
                  
                </author>
              

              

              

              
                <summary type="html">It’s 2017 and it seems that plain text emails are just boring for most users. Communicating without the emoji, GIFs or images seems rather stiff and your brand is better than that! It’s approachable and fun, or sleek and high-end, or in some other way remarkable. No plain text email will do.</summary>
              

              
              
            </entry>
          
        
      
        
          
        
          
        
      
    
  
    
      
        
          
        
          
        
      
    
  
    
      
        
          
        
          
            <entry>
              <title type="html">Single div CSS animations</title>

              
                <link href="https://trueskawka.github.io/blog/programming/rc/2017/11/04/single-div-CSS-animations.html" rel="alternate" type="text/html" title="Single &lt;b&gt;div&lt;/b&gt; CSS animations" />
                <published>2017-11-04T21:45:00+01:00</published>
                <updated>2017-11-04T21:45:00+01:00</updated>
                <id>https://trueskawka.github.io/blog/programming/rc/2017/11/04/single-div-CSS-animations</id>
                <content type="html" xml:base="https://trueskawka.github.io/blog/programming/rc/2017/11/04/single-div-CSS-animations.html">&lt;p&gt;I recently got inspired to try pure CSS single div
animations, as I came across &lt;a href=&quot;https://hacks.mozilla.org/2014/09/single-div-drawings-with-css/&quot;&gt;this blog post&lt;/a&gt; (thank you, Gabrielle!).
There were only two problems:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;I can’t draw&lt;/li&gt;
  &lt;li&gt;I don’t know enough about CSS&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;It seemed impossible to tackle without a lot of
effort, so I’ve been putting it off, until I
realized the more I think about it, the harder it
gets. I decided this is more of a learning
challenge than it is a problem. Would I ever be able to draw well enough to be a designer? I don’t think so. Would I be able to have fun creating a small project from time to time and see improvements? I betcha.&lt;/p&gt;

&lt;p&gt;How do I usually approach learning a new programming concept?&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;I read about it and find a tangible example&lt;/li&gt;
  &lt;li&gt;I look around the example and break it in a controlled way,
 to make sure I understand what happens&lt;/li&gt;
  &lt;li&gt;I come up with a small enough problem of my own that uses
the concept I want to learn and keep the example as reference,
googling for other ideas and suggestions&lt;/li&gt;
  &lt;li&gt;I incorporate the concept into other projects, to make sure
I understand it&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;For the animations, I decided there are a few key factors:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;I want to make them cute, so that I’ll share them and get
 encouraged to create more&lt;/li&gt;
  &lt;li&gt;I want to write quality code, not just make them look good&lt;/li&gt;
  &lt;li&gt;I’d like to be able to plan my approach before coding, either
by drawing them by hand or breaking into building blocks&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;i-cant-draw&quot;&gt;I can’t draw&lt;/h3&gt;

&lt;p&gt;The more I work on my laptop, the less I write, so my
handwriting went from cute tiny letters to
barely legible tiny squiggles. And even though I can draw a
passable cat (meaning - my youngest sister can identify it as a
cat without much trouble), I don’t think I can draw.&lt;/p&gt;

&lt;p&gt;For the initial experiment, I decided to explore what makes
for a cute cat. I looked for various tutorials and thought of
a few key features:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;pointy ears, usually a bit rounded&lt;/li&gt;
  &lt;li&gt;cute little nose, sometimes heart-shaped&lt;/li&gt;
  &lt;li&gt;big eyes, with or without snake-like pupils&lt;/li&gt;
  &lt;li&gt;tiny mouth, often smiling or meowing&lt;/li&gt;
  &lt;li&gt;whiskers, usually 2 or 3 on each side&lt;/li&gt;
  &lt;li&gt;oval or rounded head&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I then explored them on paper, to get a better grasp of what I
need.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://s3.eu-west-2.amazonaws.com/photos-trueskawka/photos/blog/cat_exploring_final.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Finally, I worked to recreate &lt;a href=&quot;https://codepen.io/johanmouchet/pen/OXxvqr&quot;&gt;this cute cat
animation&lt;/a&gt;
and it sort of, kind of
&lt;a href=&quot;https://codepen.io/trueskawka/pen/zPYXLM&quot;&gt;worked&lt;/a&gt;. Granted,
it’s not my own design and I didn’t fully understand what was
happening with some parts of it, but I’ve learned to decompose
an image and then translate it into basic shapes, colors
and layers. Also, it wasn’t yet a single div image - but I was
getting closer.&lt;/p&gt;

&lt;link rel=&quot;stylesheet&quot; href=&quot;/css/cat.css&quot; /&gt;

&lt;div class=&quot;cat-container&quot;&gt;
  &lt;div class=&quot;cat&quot;&gt;
    &lt;div class=&quot;ear ear-left&quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;ear ear-right&quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;head&quot;&gt;
      &lt;div class=&quot;eye eye-left&quot;&gt;
        &lt;div class=&quot;pupil&quot;&gt;&lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;eye eye-right&quot;&gt;
        &lt;div class=&quot;pupil&quot;&gt;&lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;muzzle&quot;&gt;&lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;h3 id=&quot;i-dont-know-enough-about-css&quot;&gt;I don’t know enough about CSS&lt;/h3&gt;

&lt;p&gt;Don’t get me wrong, I know enough CSS to create websites and
work on HTML email templates (which require you to write CSS
like it’s 2004), but I’ve never gone into more intricate
styling techniques.&lt;/p&gt;

&lt;p&gt;For one, I am not a designer and designers usually provide me
with either images or relatively simple UIs to code. It
doesn’t make much sense to use CSS images in a production
environment - who has the time to write and review them?&lt;/p&gt;

&lt;p&gt;But CSS seems like a good medium for me to draw - I can build
on basic shapes as I deconstruct images and the examples are
reproducible (which I can’t yet say about my hand-drawn
images).&lt;/p&gt;

&lt;p&gt;I looked for more examples and came across &lt;a href=&quot;https://www.dotconferences.com/2016/12/wenting-zhang-make-css-your-secret-super-drawing-tool&quot;&gt;this
talk&lt;/a&gt;
by Wenting Zhang. I decided to follow along with the tutorial and
create a simple mustache animation.&lt;/p&gt;

&lt;link rel=&quot;stylesheet&quot; href=&quot;/css/mustache.css&quot; /&gt;

&lt;div class=&quot;mustache-container&quot;&gt;
  &lt;div class=&quot;mustache&quot;&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;It was a great exercise, as it taught me a bit more about
&lt;code class=&quot;highlighter-rouge&quot;&gt;box-shadow&lt;/code&gt;, most importantly, that there is no limit on the
number of shadows and they can be moved around, stretched and
recolored. It also helped me start treating &lt;code class=&quot;highlighter-rouge&quot;&gt;:before&lt;/code&gt; and
&lt;code class=&quot;highlighter-rouge&quot;&gt;:after&lt;/code&gt; pseudoelements as layers.&lt;/p&gt;

&lt;p&gt;I then proceeded to create a few more animations, trying to
get a good grasp of how I should divide my images between
those layers. It turns out there is a lot of flexibility with
shadows, but reshaping is not their strongest feature - they
mostly stay the same shape as the initial layer and, although
they can be manipulated with &lt;code class=&quot;highlighter-rouge&quot;&gt;border-radius&lt;/code&gt;, since I wanted
more than a few basic shapes in my drawings, I needed to learn
more.&lt;/p&gt;

&lt;p&gt;Still, I could now create pretty complex shapes with three
layers and &lt;code class=&quot;highlighter-rouge&quot;&gt;box-shadows&lt;/code&gt;, like this animation of the Recurse
Center logo.&lt;/p&gt;

&lt;link rel=&quot;stylesheet&quot; href=&quot;/css/rc.css&quot; /&gt;

&lt;div class=&quot;rc-container&quot;&gt;
  &lt;div class=&quot;rc&quot;&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;Creating shapes with a single div is sometimes quite
challenging and can use all three layers (the div, its
&lt;code class=&quot;highlighter-rouge&quot;&gt;:before&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;:after&lt;/code&gt;). One a tad more complex shape I wanted
to use was a chevron, in order to create a simple animation of
the &lt;a href=&quot;https://www.xfive.co/&quot;&gt;Xfive&lt;/a&gt; logo, similar to the one on
their website, but created with pure CSS. For this I needed to
learn and understand gradients better, so I turned to the
&lt;a href=&quot;http://shop.oreilly.com/product/0636920031123.do&quot;&gt;CSS Secrets&lt;/a&gt;
book - after doing a few exercises, I felt ready to create
multiple gradient layers and mix them up with pseudoelements
and &lt;code class=&quot;highlighter-rouge&quot;&gt;box-shadow&lt;/code&gt;s.&lt;/p&gt;

&lt;link rel=&quot;stylesheet&quot; href=&quot;/css/x5.css&quot; /&gt;

&lt;div class=&quot;x5-container&quot;&gt;
  &lt;div class=&quot;x5&quot;&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;h3 id=&quot;whats-next&quot;&gt;What’s next?&lt;/h3&gt;

&lt;p&gt;I want to further improve both my drawing and CSS skills. I’m
planning to do a bigger project soon, but for now I’ll try to
do a few CSS animations a week - you can check out my &lt;a href=&quot;https://github.com/trueskawka/css-drawings&quot;&gt;GitHub
repository&lt;/a&gt; for
the animations’ code and my
&lt;a href=&quot;https://codepen.io/trueskawka/&quot;&gt;CodePen&lt;/a&gt; to view them (along
with some bits and pieces from various old projects).&lt;/p&gt;</content>
              


              
              
              
              
              

              
                <author>
                    <name>alicja</name>
                  
                  
                </author>
              

              

              

              
                <summary type="html">I recently got inspired to try pure CSS single div animations, as I came across this blog post (thank you, Gabrielle!). There were only two problems:</summary>
              

              
              
            </entry>
          
        
      
        
          
        
          
        
      
        
          
        
          
        
      
    
  
    
      
        
          
        
          
        
      
    
  
    
      
        
          
        
          
        
      
    
  
    
      
        
          
        
          
        
      
    
  
    
      
        
          
        
          
        
      
    
  
    
      
        
          
        
          
            <entry>
              <title type="html">return programmer;</title>

              
                <link href="https://trueskawka.github.io/blog/programming/rc/2017/01/31/return-programmer.html" rel="alternate" type="text/html" title="&lt;b&gt;return&lt;/b&gt; programmer;" />
                <published>2017-01-31T16:15:00+01:00</published>
                <updated>2017-01-31T16:15:00+01:00</updated>
                <id>https://trueskawka.github.io/blog/programming/rc/2017/01/31/return-programmer</id>
                <content type="html" xml:base="https://trueskawka.github.io/blog/programming/rc/2017/01/31/return-programmer.html">&lt;p&gt;24 weeks ago I entered the Recurse Center in New York, not sure what to
expect. I’ve only known what I was able to find online and anything I could
gather from introductory emails. I flew to another continent based on the gut
feeling that this is the right thing to do and not being able to explain
what &lt;em&gt;this&lt;/em&gt; was exactly.&lt;/p&gt;

&lt;h2 id=&quot;expectations&quot;&gt;Expectations&lt;/h2&gt;

&lt;p&gt;I have submitted my RC application on a whim when life didn’t feel quite where
I wanted it to be in March last year. It was surprisingly easy to answer
two core questions on the application form:&lt;/p&gt;

&lt;h3 id=&quot;what-do-you-want-to-be-doing-in-two-years&quot;&gt;What do you want to be doing in two years?&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;I want to work with people who are smarter than me and learn.
I want to have a remote job that allows me to travel and work.
I want to make products that suit the users’ needs.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;why-do-you-want-to-attend-the-recurse-center&quot;&gt;Why do you want to attend the Recurse Center?&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;I want to kick-off and have a new start.
For the last few years I’ve been an analyst/programmer/whatever-is-needed
and I didn’t really have a clear idea on what I want to do.
Going abroad for a few months and creating something from scratch sounds
like a great idea to finally start being a full-time programmer.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Looking back, I’m not that surprised I got in, even though when I first
got my acceptance email a month later I was shocked. (&lt;em&gt;Me? The person who
couldn’t even code a proper recursive FizzBuzz?&lt;/em&gt;) The answers above are
very much in RC-spirit, even though I’m not sure I can pin down what that
means.&lt;/p&gt;

&lt;h2 id=&quot;people&quot;&gt;People&lt;/h2&gt;

&lt;p&gt;The Recurse Center is primarily and predominantly about people. It’s not
just a space where we can hang out all the time (sometimes literally days
at a time), with WiFi, beanbags and coffee. A co-working space or a start-up
office doesn’t quite describe it.&lt;/p&gt;

&lt;p&gt;Imagine a place where you can always find someone to talk to and ask any
question. When you get to spend time with someone, they are fully engaged
in the conversation, whether it’s helping you find a fairly straightforward
typo in your code, learning a new paradigm together, late-night discussions
or listening just because you need it.&lt;/p&gt;

&lt;p&gt;It’s a community where you can make friends nearly instantaneously.
Sure, not everyone is going to be your bestie - after all, without diversity
it would be a very boring community. When you meet the people you resonate
with, it’s like a first date - time flies as you end up talking about anything
and everything.&lt;/p&gt;

&lt;p&gt;Daily check-ins and check-outs to motivate and discuss problems,
building projects together and attending workshops, morning meditation,
group sightseeing and hiking, arcade games, drinks, karaoke… It’s a big
and lively community, with something to suit everyone’s needs.&lt;/p&gt;

&lt;h2 id=&quot;space&quot;&gt;Space&lt;/h2&gt;

&lt;p&gt;There is a lot of light, thanks to huge windows and a pretty big central
space. There are rooms where one could hide should there be too much noise
from people discussing, lunching and enjoying each others’ company. Beanbags
and coffee mugs are everywhere, as are programming books.&lt;/p&gt;

&lt;p&gt;RC has a good balance between having enough space for tens of people at a
time and still being warm and cozy. Sometimes one has to wait for
the “perfect” spot to work or make sure they come early enough to get the
big coffee mug. Sometimes it’s overcrowded in a friendly way during
community events like presentations or job fairs.&lt;/p&gt;

&lt;p&gt;It’s always a welcoming space, even though it’s ever-changing and adjusting
to the needs of every new batch. It’s also always open, so it’s easy enough
to fit everyone’s schedule, whether an early bird or extreme night owl.&lt;/p&gt;

&lt;h2 id=&quot;learning&quot;&gt;Learning&lt;/h2&gt;

&lt;p&gt;Learning as an adult is hard. Everything seems to be more important than
your personal growth right at this very moment. It doesn’t give you
immediate benefits, it requires a lot of work and dedication. It’s easy
enough to understand that someone wants to travel or just have a nice
evening out with friends. But there’s nothing glamorous or instantly
gratifying in sitting down and going through the complicated algorithm or
learning German grammar.&lt;/p&gt;

&lt;p&gt;RC is self-motivated and self-paced. The freedom is overwhelming. There are
no constraints, apart from the vague deadline of the end of batch. Everyone
there wants to learn, which makes it easier, but also extremely hard - how
can you feel you’re growing enough when someone else is doing way more
interesting things, even though you’ve put in the work every day?&lt;/p&gt;

&lt;p&gt;There is also the need to be honest with oneself. To know when you got lost
or the path you’ve chosen was not the right one. To tell yourself “I’m going
to try, even though this can turn out to be a mistake” and to admit “I was
mistaken, because I didn’t know enough”. Most importantly, it’s about keeping
oneself motivated and asking “what can I learn from this?”. After all, you
often can’t tell if something is going to be the right thing before you try it.&lt;/p&gt;

&lt;p&gt;Going to RC, I wanted to learn all the things. I ended up learning things I
didn’t think I needed, which were usually not the things I’ve planned for.&lt;/p&gt;

&lt;h2 id=&quot;the-us&quot;&gt;The US&lt;/h2&gt;

&lt;p&gt;This was my very first time in the US and I didn’t expect it would be much
different from Europe. After all, I’ve been to places and seen things. Also,
&lt;em&gt;everyone&lt;/em&gt; knows the American culture - the movies, the music, the never-ending
broadcast on everything American.&lt;/p&gt;

&lt;p&gt;Yet I can see some pretty significant changes in my approach, many of which
were triggered by or learned from my American(ized) friends.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;I don’t care what people think until I do. Walking around New York it
doesn’t matter that much how you look or what you are wearing, which is
something I’ve always been self-conscious about. I gained freedom to focus
on the important relationships, not worry about what could be.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;I tried and failed a lot. Got up and failed again. Thanks to my newly
gained freedom from judgment, I’ve learned to try while I believe there is
a purpose to it.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;I’ve learned to be more open. Coming up with a smile and talking to
strangers is the new normal. As is being open about money and expecting a fair
remuneration for one’s efforts.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;I challenge whining, especially my own rambling and negativity. It still
happens more often than I’d like, but each time I’m getting better at turning
things around and focusing on solutions rather than problems.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;I embrace my inner introvert and preferred working hours. I no longer feel
guilty about not being a morning person or having &lt;em&gt;me&lt;/em&gt; days, when I’d rather
just work instead of talking to people.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;The moment I came in on a sunny Monday morning, I immediately embarrassed
myself by confusing some minor organizational thing. I then ran for the
coffee, trying to hide with half of a croissant and the overwhelming feeling
of being out of place. I was scared nobody will be able to understand my
accent. I was terrified I won’t be able to match their programming skills
and that by the end of the first week someone would politely ask me to go
back home and stop pretending I belong.&lt;/p&gt;

&lt;p&gt;I’ve been welcomed with all my flaws and encouraged to embrace the obstacles,
real or imagined. I tend to talk about my life pre- and post-RC, because this
has been a transformative experience for me. I know how to grow and adjust
it to my needs. I’ve learned some things I hope future-me will keep in mind.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Time and attention are the most valuable resources you can give and receive.
The more of those we share with each other, the better our world is going to
be.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Having an “a-ha” moment together is the most magical experience. Whenever
possible, try to grow or help grow.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Honor all forms of progress. Your friend is doing it all wrong, learning
Python instead of falling head over heels into Haskell? You don’t think
anyone could ever be a good programmer without a CS degree? Let it go.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Don’t force yourself. I forced myself to get up in the morning and fit into
other people’s schedule. I forced myself to try things I didn’t feel like doing.
I forced myself to work on something I publicly said I would, even though I’ve
realized early on it doesn’t spark joy. If forcing yourself, it’s probably
time to change something.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Do things your own way. I thought I needed to do “proper” pair programming, but
what I really needed was to have someone care about what I do and ask me the
right questions.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;No regrets. There are so many people you can meet and work with, no way
you’re going to do something with all of them. And that’s okay.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It was exhausting, it was wonderful. New York might not be the place where
I’d like to live, but it’s definitely a place I want to keep coming back to.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://s3.eu-west-2.amazonaws.com/photos-trueskawka/photos/return/nyc.JPG&quot; /&gt;&lt;/p&gt;</content>
              


              
              
              
              
              

              
                <author>
                    <name>alicja</name>
                  
                  
                </author>
              

              

              

              
                <summary type="html">24 weeks ago I entered the Recurse Center in New York, not sure what to expect. I’ve only known what I was able to find online and anything I could gather from introductory emails. I flew to another continent based on the gut feeling that this is the right thing to do and not being able to explain what this was exactly.</summary>
              

              
              
            </entry>
          
        
      
        
          
        
          
        
      
        
          
        
          
        
      
    
  
    
      
        
          
        
          
        
      
    
  
    
      
        
          
        
          
        
      
        
          
        
          
        
      
        
          
        
          
        
      
        
          
        
          
            <entry>
              <title type="html">How I grow</title>

              
                <link href="https://trueskawka.github.io/zulip/outreachy/gci/blog/2017/01/12/how-i-grow.html" rel="alternate" type="text/html" title="How I grow" />
                <published>2017-01-12T02:46:00+01:00</published>
                <updated>2017-01-12T02:46:00+01:00</updated>
                <id>https://trueskawka.github.io/zulip/outreachy/gci/blog/2017/01/12/how-i-grow</id>
                <content type="html" xml:base="https://trueskawka.github.io/zulip/outreachy/gci/blog/2017/01/12/how-i-grow.html">&lt;p&gt;The past few months have been an ongoing adventure for me - an adventure in
learning to manage the &lt;em&gt;disorienting level of freedom&lt;/em&gt; I’ve had to face.&lt;/p&gt;

&lt;p&gt;This might sound ridiculous - after all, many dream of having enough time
for learning and growing. For focusing on whatever they want, not on what
they are told to. Especially for programmers, it seems like a dream come
true - a few months of working for the pure pleasure of it and contributing
to open-source projects? Count me in!&lt;/p&gt;

&lt;p&gt;It’s been great. I have never been this happy. To wake up every day and feel
this is what I want to do, to think of code and in code with excitement.
I sometimes still feel not good or smart or experienced enough, but I never
feel it was the wrong choice.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Yes, and…&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;…and it’s very hard to stay on track. After all, programming
is full of opportunities - every day there are new libraries, patches,
languages and amazing projects created by someone on the Internet. It may
seem that there is never enough time to learn and the endless possibilities
can become suffocating. It’s extremely hard to stay creative when having
total freedom.&lt;/p&gt;

&lt;p&gt;Because of that I’ve had to learn more about myself and what rules and
habits I need to set up for myself to keep growing.&lt;/p&gt;

&lt;h3 id=&quot;short-term-satisfaction-vs-long-term-happiness&quot;&gt;Short-term satisfaction vs. long-term happiness&lt;/h3&gt;

&lt;p&gt;It’s always easy to do simple, well-defined tasks. But apart from the
short-term satisfaction of ticking it off my to-do list or sharing my
progress publicly, there is not much else to it.&lt;/p&gt;

&lt;p&gt;In order to be happy I need to do hard things. Untangle ill-defined and
fuzzy problems, navigate and unwrap spaghetti legacy code while implementing
a new feature - that’s what keeps me going.&lt;/p&gt;

&lt;p&gt;I still need to have some easy wins on my to-do list, but they can’t take it
over. Working towards the long-term goal every day, regardless of my
motivation level, should be prioritized.&lt;/p&gt;

&lt;h3 id=&quot;sources-of-inspiration&quot;&gt;Sources of inspiration&lt;/h3&gt;

&lt;p&gt;I get inspired all the time:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;My inbox is full of newsletters and emails on programming, design, and
MOOCs I’d like to take part in.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;I answer many questions every day, ranging from workflow skills, through
basic programming concepts and specific language issues, to intricate
problems I’m sometimes not sure I even understand. This makes me
constantly search for answers by using a lot of googling, skimming docs
and StackOverflow, but also through asking the right questions.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Discussing any topic in the two realms I’m a user of can be a first step
to an hours-long or even all-night journey into a world of new concepts.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Reviewing submissions and reading others’ code inspires my to constantly
question my skills and look for answers - how did they do that? what’s
the issue here? how do I even…?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Playing boardgames. The hardest time I’ve had recently with switching
my creative mode off was after two hours of playing &lt;a href=&quot;https://boardgamegeek.com/boardgame/39856/dixit&quot;&gt;Dixit&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It’s wonderful to learn new things in a wide range of topics. Managing
incoming inspirations and keeping myself from multitasking is a challenge.
Which is evident even from the &lt;a href=&quot;https://paper.dropbox.com/doc/Reading-list-first-month-FqGUhYlpF1iUQx2FnbaGe&quot;&gt;list of articles&lt;/a&gt;
that inspired me to grow as a programmer in the past month.&lt;/p&gt;

&lt;h3 id=&quot;gathering-scattered-thoughts&quot;&gt;Gathering scattered thoughts&lt;/h3&gt;

&lt;p&gt;I’ve tried many approaches for managing the influx of information and my
creative output. At the moment I use a simple system:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://habitica.com/&quot;&gt;Habitica&lt;/a&gt; for daily tasks and my to-do list.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.one-tab.com/&quot;&gt;OneTab&lt;/a&gt; to convert my tabs into a list.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;A plethora of text files scattered around multiple folders to note
incoming waves of ideas and save any emails or messages I
particularly liked. They mainly consist of various lists.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Although I have been using GitHub and other tools when working with others,
I haven’t found a better approach to managing my own workflow. I’ve tested
many until I realized I’m spending more time on improving productivity
than being productive.&lt;/p&gt;

&lt;h3 id=&quot;how-to-grow&quot;&gt;How to grow&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Set boundaries and a simple enough system that works for you.&lt;/p&gt;

    &lt;p&gt;Have regular focused time and a dedicated space, even if that space is
putting your laptop on your lap. Don’t lose your focus on distractions.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Work on your communication.&lt;/p&gt;

    &lt;p&gt;Listen attentively and be fully in the moment whenever you decide to
talk to someone. Try to understand other perspectives and think of them
when communicating your ideas.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Get distracted in a controlled way.&lt;/p&gt;

    &lt;p&gt;When it’s time to focus, try to eliminate distractions. If you can’t turn
off notifications, allows yourself to quickly assess their importance.
Take note of anything you want to investigate later.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Teach.&lt;/p&gt;

    &lt;p&gt;You can rarely be sure you know something before you explain it to
someone else. Teaching is an opportunity to learn.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;The term &lt;em&gt;disorienting level of freedom&lt;/em&gt; is directly cited from Allison
Kaptur’s talk on &lt;a href=&quot;https://www.youtube.com/watch?v=Mcc6JEhDSpo&quot;&gt;effective learning strategies for programmers&lt;/a&gt;. It’s a great talk to watch!&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Yes,_and...&quot;&gt;&lt;em&gt;Yes, and…&lt;/em&gt;&lt;/a&gt; is the most
important rule of improvisational theatre. Should you ever get a chance to
try improv, go for it! It was one of the best experiences during my batch at
the Recurse Center.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;</content>
              


              
              
              
              
              

              
                <author>
                    <name>alicja</name>
                  
                  
                </author>
              

              

              

              
                <summary type="html">The past few months have been an ongoing adventure for me - an adventure in learning to manage the disorienting level of freedom I’ve had to face.</summary>
              

              
              
            </entry>
          
        
      
    
  
</feed>
